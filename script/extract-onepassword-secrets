#!/usr/bin/env bash

log() { echo -e "\033[0;35m${1}...\033[0m"; }

if ! [ -L ~/.gnupg ] || ! [ -L ~/.ssh ]
then
  log 'Run script/setup first!' >&2
  exit 1
fi

onepassword_login() {
  if ! command -v op >/dev/null
  then
    brew cask install 1password-cli
  fi

  # shellcheck disable=SC2154
  if [ -z "$OP_SESSION_housecocc" ]
  then
    log 'Logging into 1Password'
    eval "$(op signin housecocc.1password.com caycehouse@icloud.com)"
  fi
}

onepassword_get() {
  if [ -f "$HOME/$2" ]
  then
    log "$2 already exists"
    return
  fi
  log "Extracting $2"
  onepassword_login
  op get document "$1" > "$HOME/$2"
  chmod 600 "$HOME/$2"
}

onepassword_get egcwqljukjf2zl7exyxk3rhlqi .ssh/id_ed25519
onepassword_get l5kueseqyffsja3fyejrmnhjt4 .ssh/id_rsa
onepassword_get tmmo3ipasfd2jl3rrdkcgcbuay .gnupg/cayce@mobilemedics.com.private.gpg-key

if ! [ -f "$HOME/.secrets" ]
then
  log 'Extracting secrets'
  if ! command -v jq >/dev/null
  then
    brew install jq
  fi
  onepassword_login
  GITHUB_TOKEN=$(op get item roqn5chdwkgs2vp5zjer2gqmia | jq -r '.details.sections[1].fields[1].v')
  cat > "$HOME/.secrets" <<EOF
export GITHUB_TOKEN=$GITHUB_TOKEN
EOF
  chmod 600 "$HOME/.secrets"
fi

log 'Storing SSH keys in keychain'
ssh-add -K

log 'Setting up GPG'
if ! command -v gpg >/dev/null
then
  brew install gpg
fi

chmod 700 ~/.gnupg
gpg --import ~/.gnupg/cayce@mobilemedics.com.public.gpg-key \
             ~/.gnupg/cayce@mobilemedics.com.private.gpg-key
