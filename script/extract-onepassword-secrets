#!/bin/bash
set -e

if ! [ -L ~/.gnupg ] || ! [ -L ~/.ssh ]
then
  echo "Run script/setup first!" >&2
  exit 1
fi

onepassword_login() {
  if ! command -v op >/dev/null
  then
    brew cask install 1password-cli
  fi

  # shellcheck disable=SC2154
  if [ -z "$OP_SESSION_housecocc" ]
  then
    echo "Logging into 1Password..."
    eval "$(op signin housecocc.1password.com cayce@houseco.cc)"
  fi
}

onepassword_get() {
  if [ -f "$HOME/$2" ]
  then
    echo "$2 already exists."
    return
  fi
  echo "Extracting $2..."
  onepassword_login
  op get document "$1" > "$HOME/$2"
  chmod 600 "$HOME/$2"
}

onepassword_get 5ezpnlrfb564klykhlj5cwnvvm .ssh/id_ed25519
onepassword_get nn5wwtave2gdqh5edhnpqiayri .ssh/id_rsa
onepassword_get mtdbxdbd6gmi2xr4o6eycr7jy4 .gnupg/cayce@houseco.cc.private.gpg-key

if ! [ -f "$HOME/.secrets" ]
then
  echo "Extracting secrets..."
  if ! command -v jq >/dev/null
  then
    brew install jq
  fi
  onepassword_login
  GITHUB_TOKEN=$(op get item roqn5chdwkgs2vp5zjer2gqmia | jq -r '.details.sections[1].fields[1].v')
  cat > "$HOME/.secrets" <<EOF
export GITHUB_TOKEN=$GITHUB_TOKEN
EOF
  chmod 600 "$HOME/.secrets"
fi

echo "Storing SSH keys in keychain..."
ssh-add -K

echo "Setting up GPG..."
if ! command -v gpg >/dev/null
then
  brew install gpg
fi

chmod 700 ~/.gnupg
gpg --import ~/.gnupg/cayce@houseco.cc.public.gpg-key \
             ~/.gnupg/cayce@houseco.cc.private.gpg-key
